{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/emreeryigit/Documents/coding/againreact_Max/23advNEXT/pages/[meetupId].js\";\nimport { MongoClient } from 'mongodb';\nimport React from 'react';\nimport MeetupDetail from '../components/meetups/MeetupDetail';\n\nfunction MeetupDetails(props) {\n  console.log(props);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(MeetupDetail, {\n      image: props.image,\n      title: props.title,\n      address: props.address,\n      description: props.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n}\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect(\"mongodb+srv://Emre_DB:808OC7zLkQgVqzk1@cluster0.pvcaw.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const meetups = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    })),\n    fallback: false\n  };\n}\nexport async function getStaticProps(context) {\n  console.log(context.params);\n  const meetupId = context.params.meetupId;\n  const client = await MongoClient.connect(\"mongodb+srv://Emre_DB:808OC7zLkQgVqzk1@cluster0.pvcaw.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const selectedMeetup = await meetupsCollection.find();\n  client.close();\n  console.log(selectedMeetup); // fetch meetups from the API\n\n  return {\n    props: {// meetup: {\n      //     id: selectedMeetup._id.toString(),\n      //     title: selectedMeetup.title,\n      //     address: selectedMeetup.address,\n      //     image: selectedMeetup.image,\n      //     description: selectedMeetup.description,\n      //   },\n    },\n    revalidate: 10\n  };\n}\nexport default MeetupDetails;","map":{"version":3,"sources":["/Users/emreeryigit/Documents/coding/againreact_Max/23advNEXT/pages/[meetupId].js"],"names":["MongoClient","React","MeetupDetail","MeetupDetails","props","console","log","image","title","address","description","getStaticPaths","client","connect","db","meetupsCollection","collection","meetups","find","_id","toArray","close","paths","map","meetup","params","meetupId","toString","fallback","getStaticProps","context","selectedMeetup","revalidate"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,SAA5B;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,oCAAzB;;AAGA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC1BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACF,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,2BACA,QAAC,YAAD;AAAc,MAAA,KAAK,EAAEA,KAAK,CAACG,KAA3B;AAAkC,MAAA,KAAK,EAAEH,KAAK,CAACI,KAA/C;AAAsD,MAAA,OAAO,EAAEJ,KAAK,CAACK,OAArE;AAA8E,MAAA,WAAW,EAAEL,KAAK,CAACM;AAAjG;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;AACD,OAAO,eAAeC,cAAf,GAAgC;AACnC,QAAMC,MAAM,GAAG,MAAMZ,WAAW,CAACa,OAAZ,CAAoB,uGAApB,CAArB;AACA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AACA,QAAMC,OAAO,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA2B;AAACC,IAAAA,GAAG,EAAE;AAAN,GAA3B,EAAqCC,OAArC,EAAtB;AACAR,EAAAA,MAAM,CAACS,KAAP;AACA,SAAO;AACHC,IAAAA,KAAK,EAAEL,OAAO,CAACM,GAAR,CAAYC,MAAM,KAAK;AAC1BC,MAAAA,MAAM,EAAE;AACJC,QAAAA,QAAQ,EAAEF,MAAM,CAACL,GAAP,CAAWQ,QAAX;AADN;AADkB,KAAL,CAAlB,CADJ;AAMHC,IAAAA,QAAQ,EAAE;AANP,GAAP;AAQH;AACD,OAAO,eAAeC,cAAf,CAA+BC,OAA/B,EAAwC;AAC3CzB,EAAAA,OAAO,CAACC,GAAR,CAAYwB,OAAO,CAACL,MAApB;AACA,QAAMC,QAAQ,GAAGI,OAAO,CAACL,MAAR,CAAeC,QAAhC;AACA,QAAMd,MAAM,GAAG,MAAMZ,WAAW,CAACa,OAAZ,CAAoB,uGAApB,CAArB;AACA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AACA,QAAMe,cAAc,GAAG,MAAMhB,iBAAiB,CAACG,IAAlB,EAA7B;AACAN,EAAAA,MAAM,CAACS,KAAP;AACAhB,EAAAA,OAAO,CAACC,GAAR,CAAYyB,cAAZ,EAR2C,CAS3C;;AACA,SAAO;AACH3B,IAAAA,KAAK,EAAE,CACH;AACA;AACA;AACA;AACA;AACA;AACA;AAPG,KADJ;AAUH4B,IAAAA,UAAU,EAAE;AAVT,GAAP;AAYH;AAED,eAAe7B,aAAf","sourcesContent":["import { MongoClient } from 'mongodb';\n\nimport React from 'react'\nimport MeetupDetail from '../components/meetups/MeetupDetail';\n\n\nfunction MeetupDetails(props) {\n    console.log(props);\n  return (\n    <React.Fragment>\n    <MeetupDetail image={props.image} title={props.title} address={props.address} description={props.description}  />\n    \n    </React.Fragment>\n  )\n}\nexport async function getStaticPaths() {\n    const client = await MongoClient.connect(\"mongodb+srv://Emre_DB:808OC7zLkQgVqzk1@cluster0.pvcaw.mongodb.net/meetups?retryWrites=true&w=majority\")\n    const db = client.db()\n    const meetupsCollection = db.collection(\"meetups\")\n    const meetups = await meetupsCollection.find({}, {_id: 1}).toArray()\n    client.close()\n    return {\n        paths: meetups.map(meetup => ({\n            params: {\n                meetupId: meetup._id.toString()\n            }\n        })),\n        fallback: false\n    }\n}\nexport async function getStaticProps (context) {\n    console.log(context.params)\n    const meetupId = context.params.meetupId\n    const client = await MongoClient.connect(\"mongodb+srv://Emre_DB:808OC7zLkQgVqzk1@cluster0.pvcaw.mongodb.net/meetups?retryWrites=true&w=majority\")\n    const db = client.db()\n    const meetupsCollection = db.collection(\"meetups\")\n    const selectedMeetup = await meetupsCollection.find()\n    client.close()\n    console.log(selectedMeetup)\n    // fetch meetups from the API\n    return {\n        props: {\n            // meetup: {\n            //     id: selectedMeetup._id.toString(),\n            //     title: selectedMeetup.title,\n            //     address: selectedMeetup.address,\n            //     image: selectedMeetup.image,\n            //     description: selectedMeetup.description,\n            //   },\n        },\n        revalidate: 10\n    }\n}\n\nexport default MeetupDetails\n"]},"metadata":{},"sourceType":"module"}