{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/emreeryigit/Documents/coding/againreact_Max/23advNEXT/pages/[meetupId].js\";\n// import { MongoClient } from 'mongodb';\n// import React from 'react'\n// import MeetupDetail from '../components/meetups/MeetupDetail';\n// function MeetupDetails(props) {\n//     console.log(props);\n//   return (\n//     <React.Fragment>\n//     <MeetupDetail image={props.image} title={props.title} address={props.address} description={props.description}  />\n//     </React.Fragment>\n//   )\n// }\n// export async function getStaticPaths() {\n//     const client = await MongoClient.connect(\"mongodb+srv://Emre_DB:808OC7zLkQgVqzk1@cluster0.pvcaw.mongodb.net/meetups?retryWrites=true&w=majority\")\n//     const db = client.db()\n//     const meetupsCollection = db.collection(\"meetups\")\n//     const meetups = await meetupsCollection.find({}, {_id: 1}).toArray()\n//     client.close()\n//     return {\n//         paths: meetups.map(meetup => ({\n//             params: {\n//                 meetupId: meetup._id.toString()\n//             }\n//         })),\n//         fallback: false\n//     }\n// }\n// export async function getStaticProps (context) {\n//     console.log(context.params)\n//     const meetupId = context.params.meetupId\n//     const client = await MongoClient.connect(\"mongodb+srv://Emre_DB:808OC7zLkQgVqzk1@cluster0.pvcaw.mongodb.net/meetups?retryWrites=true&w=majority\")\n//     const db = client.db()\n//     const meetupsCollection = db.collection(\"meetups\")\n//     const selectedMeetup = await meetupsCollection.find()\n//     client.close()\n//     console.log(selectedMeetup)\n//     // fetch meetups from the API\n//     return {\n//         props: {\n//             // meetup: {\n//             //     id: selectedMeetup._id.toString(),\n//             //     title: selectedMeetup.title,\n//             //     address: selectedMeetup.address,\n//             //     image: selectedMeetup.image,\n//             //     description: selectedMeetup.description,\n//             //   },\n//         },\n//         revalidate: 10\n//     }\n// }\n// export default MeetupDetails\nimport MeetupDetail from '../components/meetups/MeetupDetail';\n\nfunction MeetupDetails(props) {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    image: props.meetupData.image,\n    title: props.meetupData.title,\n    address: props.meetupData.address,\n    description: props.meetupData.description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n\n_c = MeetupDetails;\nexport var __N_SSG = true;\nexport default MeetupDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetupDetails\");","map":{"version":3,"sources":["/Users/emreeryigit/Documents/coding/againreact_Max/23advNEXT/pages/[meetupId].js"],"names":["MeetupDetail","MeetupDetails","props","meetupData","image","title","address","description"],"mappings":";;AAAA;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAMA,OAAOA,YAAP,MAAyB,oCAAzB;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC5B,sBACE,QAAC,YAAD;AACE,IAAA,KAAK,EAAEA,KAAK,CAACC,UAAN,CAAiBC,KAD1B;AAEE,IAAA,KAAK,EAAEF,KAAK,CAACC,UAAN,CAAiBE,KAF1B;AAGE,IAAA,OAAO,EAAEH,KAAK,CAACC,UAAN,CAAiBG,OAH5B;AAIE,IAAA,WAAW,EAAEJ,KAAK,CAACC,UAAN,CAAiBI;AAJhC;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;KATQN,a;;AA8DT,eAAeA,aAAf","sourcesContent":["// import { MongoClient } from 'mongodb';\n\n// import React from 'react'\n// import MeetupDetail from '../components/meetups/MeetupDetail';\n\n\n// function MeetupDetails(props) {\n//     console.log(props);\n//   return (\n//     <React.Fragment>\n//     <MeetupDetail image={props.image} title={props.title} address={props.address} description={props.description}  />\n    \n//     </React.Fragment>\n//   )\n// }\n// export async function getStaticPaths() {\n//     const client = await MongoClient.connect(\"mongodb+srv://Emre_DB:808OC7zLkQgVqzk1@cluster0.pvcaw.mongodb.net/meetups?retryWrites=true&w=majority\")\n//     const db = client.db()\n//     const meetupsCollection = db.collection(\"meetups\")\n//     const meetups = await meetupsCollection.find({}, {_id: 1}).toArray()\n//     client.close()\n//     return {\n//         paths: meetups.map(meetup => ({\n//             params: {\n//                 meetupId: meetup._id.toString()\n//             }\n//         })),\n//         fallback: false\n//     }\n// }\n// export async function getStaticProps (context) {\n//     console.log(context.params)\n//     const meetupId = context.params.meetupId\n//     const client = await MongoClient.connect(\"mongodb+srv://Emre_DB:808OC7zLkQgVqzk1@cluster0.pvcaw.mongodb.net/meetups?retryWrites=true&w=majority\")\n//     const db = client.db()\n//     const meetupsCollection = db.collection(\"meetups\")\n//     const selectedMeetup = await meetupsCollection.find()\n//     client.close()\n//     console.log(selectedMeetup)\n//     // fetch meetups from the API\n//     return {\n//         props: {\n//             // meetup: {\n//             //     id: selectedMeetup._id.toString(),\n//             //     title: selectedMeetup.title,\n//             //     address: selectedMeetup.address,\n//             //     image: selectedMeetup.image,\n//             //     description: selectedMeetup.description,\n//             //   },\n//         },\n//         revalidate: 10\n//     }\n// }\n\n// export default MeetupDetails\n\n\n\nimport { MongoClient, ObjectId } from 'mongodb';\n\nimport MeetupDetail from '../components/meetups/MeetupDetail';\n\nfunction MeetupDetails(props) {\n  return (\n    <MeetupDetail\n      image={props.meetupData.image}\n      title={props.meetupData.title}\n      address={props.meetupData.address}\n      description={props.meetupData.description}\n    />\n  );\n}\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect(\n    \"mongodb+srv://Emre_DB:808OC7zLkQgVqzk1@cluster0.pvcaw.mongodb.net/meetups?retryWrites=true&w=majority\"\n  );\n  const db = client.db();\n\n  const meetupsCollection = db.collection('meetups');\n\n  const meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\n\n  client.close();\n\n  return {\n    fallback: false,\n    paths: meetups.map((meetup) => ({\n      params: { meetupId: meetup._id.toString() },\n    })),\n  };\n}\n\nexport async function getStaticProps(context) {\n  // fetch data for a single meetup\n\n  const meetupId = context.params.meetupId;\n\n  const client = await MongoClient.connect(\n    \"mongodb+srv://Emre_DB:808OC7zLkQgVqzk1@cluster0.pvcaw.mongodb.net/meetups?retryWrites=true&w=majority\"\n  );\n  const db = client.db();\n\n  const meetupsCollection = db.collection('meetups');\n\n  const selectedMeetup = await meetupsCollection.findOne({\n    _id: ObjectId(meetupId),\n  });\n\n  client.close();\n\n  return {\n    props: {\n      meetupData: {\n        id: selectedMeetup._id.toString(),\n        title: selectedMeetup.title,\n        address: selectedMeetup.address,\n        image: selectedMeetup.image,\n        description: selectedMeetup.description,\n      },\n    },\n  };\n}\n\nexport default MeetupDetails;"]},"metadata":{},"sourceType":"module"}