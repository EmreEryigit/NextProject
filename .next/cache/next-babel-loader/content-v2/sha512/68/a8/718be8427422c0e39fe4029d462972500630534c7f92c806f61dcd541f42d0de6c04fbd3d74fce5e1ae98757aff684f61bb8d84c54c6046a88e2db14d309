{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/emreeryigit/Documents/coding/againreact_Max/23advNEXT/pages/[meetupId].js\";\nimport { MongoClient } from 'mongodb';\nimport React from 'react';\nimport MeetupDetail from '../components/meetups/MeetupDetail';\nconst DUMMY_MEETUPS = [{\n  id: 'm1',\n  title: 'A First Meetup',\n  image: 'https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg',\n  address: 'Some address 5, 12345 Some City',\n  description: 'This is a first meetup!'\n}, {\n  id: 'm2',\n  title: 'A Second Meetup',\n  image: 'https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg',\n  address: 'Some address 10, 12345 Some City',\n  description: 'This is a second meetup!'\n}];\n\nfunction MeetupDetails(props) {\n  console.log(props.meetups);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(MeetupDetail, {\n      meetup: props.meetups\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect(\"mongodb+srv://Emre_DB:808OC7zLkQgVqzk1@cluster0.pvcaw.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const meetups = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    })),\n    fallback: false\n  };\n}\nexport async function getStaticProps(context) {\n  const {\n    meetupId\n  } = context.params;\n  const client = await MongoClient.connect(\"mongodb+srv://Emre_DB:808OC7zLkQgVqzk1@cluster0.pvcaw.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const selectedMeetup = await meetupsCollection.findOne({\n    _id: meetupId\n  });\n  client.close(); // fetch meetups from the API\n\n  return {\n    props: {\n      meetups: selectedMeetup\n    },\n    revalidate: 10\n  };\n}\nexport default MeetupDetails;","map":{"version":3,"sources":["/Users/emreeryigit/Documents/coding/againreact_Max/23advNEXT/pages/[meetupId].js"],"names":["MongoClient","React","MeetupDetail","DUMMY_MEETUPS","id","title","image","address","description","MeetupDetails","props","console","log","meetups","getStaticPaths","client","connect","db","meetupsCollection","collection","find","_id","toArray","close","paths","map","meetup","params","meetupId","toString","fallback","getStaticProps","context","selectedMeetup","findOne","revalidate"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,SAA5B;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,oCAAzB;AACA,MAAMC,aAAa,GAAG,CAClB;AACEC,EAAAA,EAAE,EAAE,IADN;AAEEC,EAAAA,KAAK,EAAE,gBAFT;AAGEC,EAAAA,KAAK,EAAE,wHAHT;AAIEC,EAAAA,OAAO,EAAE,iCAJX;AAKEC,EAAAA,WAAW,EAAE;AALf,CADkB,EAQlB;AACEJ,EAAAA,EAAE,EAAE,IADN;AAEEC,EAAAA,KAAK,EAAE,iBAFT;AAGEC,EAAAA,KAAK,EAAE,wHAHT;AAIEC,EAAAA,OAAO,EAAE,kCAJX;AAKEC,EAAAA,WAAW,EAAE;AALf,CARkB,CAAtB;;AAiBA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC1BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,OAAlB;AACF,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,2BACA,QAAC,YAAD;AAAc,MAAA,MAAM,EAAEH,KAAK,CAACG;AAA5B;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;AACD,OAAO,eAAeC,cAAf,GAAgC;AACnC,QAAMC,MAAM,GAAG,MAAMf,WAAW,CAACgB,OAAZ,CAAoB,uGAApB,CAArB;AACA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AACA,QAAMN,OAAO,GAAG,MAAMK,iBAAiB,CAACE,IAAlB,CAAuB,EAAvB,EAA2B;AAACC,IAAAA,GAAG,EAAE;AAAN,GAA3B,EAAqCC,OAArC,EAAtB;AACAP,EAAAA,MAAM,CAACQ,KAAP;AACA,SAAO;AACHC,IAAAA,KAAK,EAAGX,OAAO,CAACY,GAAR,CAAYC,MAAM,KAAK;AAC3BC,MAAAA,MAAM,EAAE;AACJC,QAAAA,QAAQ,EAAEF,MAAM,CAACL,GAAP,CAAWQ,QAAX;AADN;AADmB,KAAL,CAAlB,CADL;AAMHC,IAAAA,QAAQ,EAAE;AANP,GAAP;AAQH;AACD,OAAO,eAAeC,cAAf,CAA+BC,OAA/B,EAAwC;AAC3C,QAAM;AAACJ,IAAAA;AAAD,MAAaI,OAAO,CAACL,MAA3B;AACA,QAAMZ,MAAM,GAAG,MAAMf,WAAW,CAACgB,OAAZ,CAAoB,uGAApB,CAArB;AACA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AACA,QAAMc,cAAc,GAAG,MAAMf,iBAAiB,CAACgB,OAAlB,CAA0B;AAACb,IAAAA,GAAG,EAAEO;AAAN,GAA1B,CAA7B;AACAb,EAAAA,MAAM,CAACQ,KAAP,GAN2C,CAO3C;;AACA,SAAO;AACHb,IAAAA,KAAK,EAAE;AACHG,MAAAA,OAAO,EAAEoB;AADN,KADJ;AAIHE,IAAAA,UAAU,EAAE;AAJT,GAAP;AAMH;AAED,eAAe1B,aAAf","sourcesContent":["import { MongoClient } from 'mongodb';\n\nimport React from 'react'\nimport MeetupDetail from '../components/meetups/MeetupDetail';\nconst DUMMY_MEETUPS = [\n    {\n      id: 'm1',\n      title: 'A First Meetup',\n      image: 'https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg',\n      address: 'Some address 5, 12345 Some City',\n      description: 'This is a first meetup!'\n    },\n    {\n      id: 'm2',\n      title: 'A Second Meetup',\n      image: 'https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg',\n      address: 'Some address 10, 12345 Some City',\n      description: 'This is a second meetup!'\n    }\n  ];\n\nfunction MeetupDetails(props) {\n    console.log(props.meetups);\n  return (\n    <React.Fragment>\n    <MeetupDetail meetup={props.meetups} />\n    \n    </React.Fragment>\n  )\n}\nexport async function getStaticPaths() {\n    const client = await MongoClient.connect(\"mongodb+srv://Emre_DB:808OC7zLkQgVqzk1@cluster0.pvcaw.mongodb.net/meetups?retryWrites=true&w=majority\")\n    const db = client.db()\n    const meetupsCollection = db.collection(\"meetups\")\n    const meetups = await meetupsCollection.find({}, {_id: 1}).toArray()\n    client.close()\n    return {\n        paths:  meetups.map(meetup => ({\n            params: {\n                meetupId: meetup._id.toString()\n            }\n        })),\n        fallback: false\n    }\n}\nexport async function getStaticProps (context) {\n    const {meetupId} = context.params\n    const client = await MongoClient.connect(\"mongodb+srv://Emre_DB:808OC7zLkQgVqzk1@cluster0.pvcaw.mongodb.net/meetups?retryWrites=true&w=majority\")\n    const db = client.db()\n    const meetupsCollection = db.collection(\"meetups\")\n    const selectedMeetup = await meetupsCollection.findOne({_id: meetupId})\n    client.close()\n    // fetch meetups from the API\n    return {\n        props: {\n            meetups: selectedMeetup\n        },\n        revalidate: 10\n    }\n}\n\nexport default MeetupDetails\n"]},"metadata":{},"sourceType":"module"}